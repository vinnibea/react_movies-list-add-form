{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","handleChange","onAdd","values","checkForm","checkUrl","keys","Object","fieldStrings","fieldBooleans","splice","checkFilled","every","field","String","length","shouldSubmit","onSubmit","key","validation","invalidClass","classnames","type","name","placeholder","value","onChange","onBlur","includes","disabled","App","useState","newMovie","setNewMovie","moviesFromServer","moviesCollection","setMovieCollection","setFromChecks","setUrlErrorMsg","event","target","currentCheck","current","url","match","preventDefault","copy","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65e14b3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Movie {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n}\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './NewMovie.scss';\nimport classnames from 'classnames';\n\ninterface NewMovieProps {\n  handleChange(event: React.ChangeEvent): void,\n  onAdd(event: React.MouseEvent<HTMLFormElement>): void,\n  // eslint-disable-next-line\n  values: any,\n  // eslint-disable-next-line\n  checkForm: any,\n  checkUrl: string,\n}\n\nexport const NewMovie: React.FC<NewMovieProps> = ({\n  handleChange,\n  onAdd,\n  values,\n  checkForm,\n  checkUrl,\n}) => {\n  const keys = Object.keys(values);\n  const fieldStrings = Object.values(values);\n  const fieldBooleans = Object.values(checkForm);\n\n  fieldStrings.splice(1, 1);\n  const checkFilled = fieldStrings\n    .every((field) => String(field).length);\n\n  fieldBooleans.splice(1, 1);\n  const checkCorrect = fieldBooleans.every(field => field === true);\n\n  const shouldSubmit = checkCorrect === true && checkFilled === true;\n\n  return (\n    <form className=\"newMovie\" onSubmit={onAdd}>\n      {keys.map(key => {\n        let validation = checkForm[key];\n\n        if (key === 'description') {\n          validation = true;\n        }\n\n        const invalidClass = classnames({\n          'newMovie__input--invalid': !validation,\n        });\n\n        return (\n          <>\n            <input\n              type=\"text\"\n              name={key}\n              key={key}\n              className={`newMovie__input ${invalidClass}`}\n              placeholder={`Add ${key}`}\n              value={values[key]}\n              onChange={handleChange}\n              onBlur={handleChange}\n              data-cy={`form-${key}`}\n            />\n            <div className=\"newMovie__input-validation\">\n              {!validation && (\n                <span className=\"newMovie__input-verdict\">\n                  This field is required\n                </span>\n              )}\n              {!validation && key.includes('Url') && (\n                <span className=\"newMovie__input-verdict\">\n                  {checkUrl}\n                </span>\n              )}\n            </div>\n          </>\n        );\n      })}\n\n      <button\n        className=\"newMovie__button\"\n        type=\"submit\"\n        disabled={!shouldSubmit}\n      >\n        ADD MOVIE\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface Movie {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n}\n\ninterface FormValidation {\n  title: boolean,\n  description: boolean,\n  imgUrl: boolean,\n  imdbUrl: boolean,\n  imdbId: boolean,\n}\n\nexport const App: React.FC = () => {\n  const movie: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const validForm: FormValidation = {\n    title: true,\n    description: false,\n    imgUrl: true,\n    imdbUrl: true,\n    imdbId: true,\n  };\n\n  const [newMovie, setNewMovie] = useState(movie);\n  const [\n    moviesCollection,\n    setMovieCollection,\n  ] = useState<Movie[]>([...moviesFromServer]);\n  const [checkForm, setFromChecks] = useState(validForm);\n  const [checkUrl, setUrlErrorMsg] = useState('');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n\n    if (!value && name !== 'description') {\n      setFromChecks(currentCheck => (\n        {\n          ...currentCheck,\n          [name]: false,\n        }\n      ));\n\n      setNewMovie((current) => (\n        {\n          ...current,\n          [name]: value,\n        }));\n\n      return;\n    }\n    // eslint-disable-next-line\n    const regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (name) {\n      case 'description': {\n        setNewMovie((current) => (\n          {\n            ...current,\n            [name]: value,\n          }\n        ));\n\n        setFromChecks(currentCheck => (\n          {\n            ...currentCheck,\n            [name]: false,\n          }\n        ));\n\n        break;\n      }\n\n      case 'title':\n      case 'imdbId': {\n        setNewMovie((current) => (\n          {\n            ...current,\n            [name]: value,\n          }\n\n        ));\n\n        setFromChecks(currentCheck => (\n          {\n            ...currentCheck,\n            [name]: true,\n          }\n        ));\n\n        break;\n      }\n\n      case 'imdbUrl':\n      case 'imgUrl': {\n        const url = value.match(regexp);\n\n        if (url) {\n          setNewMovie((current) => (\n            {\n              ...current,\n              [name]: value,\n            }\n          ));\n\n          setFromChecks(currentCheck => (\n            {\n              ...currentCheck,\n              [name]: url?.length > 0,\n            }\n          ));\n\n          return;\n        }\n\n        setNewMovie((current) => (\n          {\n            ...current,\n            [name]: value,\n          }\n        ));\n\n        setFromChecks(currentCheck => (\n          {\n            ...currentCheck,\n            [name]: false,\n          }\n        ));\n\n        setUrlErrorMsg('Incorrect link. Please, enter propper URL');\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n\n  const addFilm = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const copy = { ...newMovie };\n\n    setMovieCollection((currentMovies) => {\n      return (\n        [...currentMovies, copy]\n      );\n    });\n\n    setNewMovie(movie);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesCollection} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          handleChange={handleChange}\n          onAdd={addFilm}\n          values={newMovie}\n          checkForm={checkForm}\n          checkUrl={checkUrl}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}